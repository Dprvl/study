// isSquare function
var isSquare = function(n){
  
    if (Math.sqrt(n) == Math.sqrt(n).toFixed(0)) {
        return true;
    } else return false; // fix me
  }
  
// removing WUBs from a string

function songDecoder(song){
    return song
                .toUpperCase()
                .split('WUB')
                .join(" ")
                .replace(/ +/g, ' ')
                .trim();
}

// X-s and O-s case-insensitive comparison

function XO(str) {
  let x = str.match(/x/gi);
  let o = str.match(/o/gi);
  return (x && x.length) === (o && o.length);
}

// Amount of points

function points(games) {
let count = 0;
    games.forEach(elem => {
      let x = elem[0];
      let y = elem[2];
    var point = 0;
        if (x > y) point = 3;
        if (x < y) point = 0;
        if (x == y) point = 1;
        count = count + point;
 });
 return count;
    }
    
console.log(points(['1:0','2:0','3:0','4:0','2:1','3:1','4:1','3:2','4:2','4:3']));

// Get planet name by Id (the point was to add breaks)

function getPlanetName(id){
  var name;
  switch(id){
    case 1:
      name = 'Mercury';
      break;
    case 2:
      name = 'Venus';
      break;
    case 3:
      name = 'Earth'
      break;
    case 4:
      name = 'Mars'
      break;
    case 5:
      name = 'Jupiter'
      break;
    case 6:
      name = 'Saturn'
      break;
    case 7:
      name = 'Uranus'
      break;
    case 8:
      name = 'Neptune'
      break;
  }
  
  return name;
}

// Getting Initials

function abbrevName(name){
let result = [];
  name
            .toUpperCase()
            .split(" ")
            .forEach(el => {
              result.push(el[0]);
            });
        return result.join(".");    

}

// DNA pair


function DNAStrand(dna){
let result = [];
  for (i = 0; i< dna.length; i++) {
      switch (dna[i]) {
      case 'A': result[i] = 'T'; break;
      case 'T': result[i] = 'A'; break;
      case 'G': result[i] = 'C'; break;
      case 'C': result[i] = 'G'; break;
    }
  }
  return result.join("");
}

//Reversing words in a string

function reverseWords(str) {
  return str.split(" ").map(el => {
      return el.split("").map((letter, i, el) => {
        return letter[i-1] = el[el.length-i-1];
      }).join("");
  }).join(" ");
}

